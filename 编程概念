函数的多态和重载：统一的对外接口来完成不同的功能
多态：多态是对于类来说的，同一个类根据调用的方法不同而得到的结果不一样。，根据方法不同的参数。
重载：重载是对于方法来说的，一个方法根据传入的参数不同而得到的结果不一样，这就是重载。
在同一个类中，函数名相同，参数列表不同，编译器会根据这些函数的不同参数列表，将同名的函数名称做修饰，从而生成一些不同名称的预处理函数，未体现多态。


多态：多态指的是不同类的相同方法，相同参数，不同功能。 
eg:
class Triangle:
    def __init__(self,width,height):
        self.width = width
        self.height = height
 
    def getArea(self):
        area=self.width* self.height / 2
        return area
 
class Square:
    def __init__(self,size):
        self.size = size
 
    def getArea(self):    # 同一个方法在不同的类中最终呈现出不同的效果，即为多态
        area = self.size * self.size

--------------------- --------------------- --------------------- --------------------- --------------------- --------------------- --------------------- 

重载：相同方法的不同参数类型，对应Python的args,kwargs。
在Java中，方法重载有针对两个场景：
1.参数类型不同
2.参数个数不同
在python中只有2
函数的重载即对一个函数名重新赋予它新的含义，使一个函数名可以多用。**所谓重载，其实就是“一物多用”。
