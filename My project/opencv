





from MLPlatform.misc.videocamera import VideoCamera
from MLPlatform.inference.TF.detect import Detectron
import cv2
if __name__ == '__main__':
    cap=cv2.VideoCapture("./VID20181205080458.mp4")

    #detector = Detectron(model_name='retinanet')
    #detector = Detectron(model_name='faster_rcnn')
    detector = Detectron(model_name='yolov3')
    writer=None

    num=0
    while True:
        ret,frame=cap.read()

        if writer == None:
            fourcc = cv2.VideoWriter_fourcc(*"MJPG")
            writer = cv2.VideoWriter('detectron.avi', fourcc, 30,
                (frame.shape[1], frame.shape[0]), True)
        # image,count=zhangxu.detect(frame)
        num+=1
        img, num_person = detector.yolov3_detect(frame)
        cv2.putText(img,('count:{}'.format(num_person)),(1223,150),cv2.FONT_HERSHEY_COMPLEX,3,(0,0,255),3)
        cv2.namedWindow('yolov3',0)
        cv2.resizeWindow('yolov3', 640,480)
        cv2.imshow('yolov3',img)

        #writer.write(img)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
        if not ret:
            break
        # if num==100:
        #     break


    # cap.stop()
    # cap.stream.release()
    # cv2.destroyAllWindows()
    # del cap


